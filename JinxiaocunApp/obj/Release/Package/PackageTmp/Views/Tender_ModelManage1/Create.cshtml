@model JinxiaocunApp.Models.Tender_ModelManage1

@{
    ViewBag.Title = "模式一";
    JinxiaocunApp.Models.Tender_GongGao tgModel = ViewBag.ggM;
    
}

@if (1 == 2)
{
    <script type="text/javascript" src="../../Scripts/jquery-2.0.3-vsdoc.js"></script>
}


<div id="tender_m1div" class="alert alert-warning alert-dismissable" style="display:none">
    
</div>



<div class="panel panel-info">
    <strong style="font-size:20pt;">供应商招标控制（模式一）</strong><span><label>倒计时：</label><input type="text" id="EndTime2" name="EndTime2" class="text-danger" readonly="readonly" value="" /></span>
@using (Ajax.BeginForm(new AjaxOptions { UpdateTargetId = "incomming", HttpMethod = "Post", InsertionMode = InsertionMode.InsertAfter, OnComplete="tender_M1Secess" }))
{
    @*@using (Html.BeginForm())
    {*@
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>Tender_ModelManage1</legend>

            <table class="table-striped table-hover table-bordered" width="100%" style="line-height:26px">
                <tr>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.tenderGonggao.Name)
                        </div>
                    </td>
                    <td colspan="5">
                        <div class="display-field">
                            @tgModel.Name
                        </div>
                    </td>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.tenderGonggao.SN)
                        </div>
                    </td>
                    <td>
                        @tgModel.SN
                    </td>
                </tr>
                <tr>
                    <td width="80px">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.tenderGonggao.BeginDate)
                        </div>
                    </td>
                    <td width="90px">
                        @tgModel.BeginDate.Value.ToShortDateString()
                    </td>
                    <td>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.tenderGonggao.EndDate)
                        </div>
                    </td>
                    <td width="90px">
                        @tgModel.EndDate.Value.ToShortDateString()
                    </td>
                    <td width="80px">
                        <div class="editor-label">
                            <label> 投标模式</label>
                        </div>
                    </td>
                    <td>
                        模式一
                    </td>

                    <td width="80px">
                        <div class="editor-label">
                            @Html.LabelFor(model=>model.PriceUnit)
                        </div>
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.PriceUnit, new { @class="form-control",@readonly="readonly"})
                        @Html.ValidationMessageFor(model=>model.PriceUnit)
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.BeginTime1, new { @class = "control-label" })
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            <div class="input-group date form_datetime" data-date="" data-date-format="hh:ii:00">
                                @Html.TextBoxFor(model => model.BeginTime1, new { @class = "form-control", size = "16", @readonly = "" })
                                @*<input class="form-control" size="16" type="text" value="" readonly>*@
                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span>
                                <span class="input-group-addon"><span class="glyphicon glyphicon-th"></span></span>
                                @Html.ValidationMessageFor(model => model.BeginTime1)
                            </div>
                            @*@Html.TextBoxFor(model => model.BeginTime1, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.BeginTime1)*@
                        </div>
                    </td>
                    <td colspan="2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.EndTime1, new { @class = "control-label" })
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                           

                                <div class="input-group date form_datetime" data-date="" data-date-format="hh:ii:00">
                                    @Html.TextBoxFor(model => model.EndTime1, new { @class = "form-control",size="16",@readonly="" })
                                    @*<input class="form-control" size="16" type="text" value="" readonly>*@
                                    <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span>
                                    <span class="input-group-addon"><span class="glyphicon glyphicon-th"></span></span>
                                    @Html.ValidationMessageFor(model => model.EndTime1)
                                </div>
                                
                        </div>
                    </td>
                    <td colspan="2">
                        @*@Html.ActionLink("第一轮时间确认", "TimeConfirm", new {btime= })*@
                        <button type="submit" name="btnAction" id="btnAction1" class="btn btn-info" value="btn1" data-target="#tender_m1div">第一轮时间确认</button>
                    </td>
                </tr>
                @*<tr>
                    <td colspan="2"></td>
                    <td></td>
                </tr>*@
                <tr>
                    <td colspan="2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.BeginTime2)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            <div class="input-group date form_datetime" data-date="" data-date-format="hh:ii:00">
                                @Html.TextBoxFor(model => model.BeginTime2, new { @class = "form-control", size = "16", @readonly = "" })
                                @*<input class="form-control" size="16" type="text" value="" readonly>*@
                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span>
                                <span class="input-group-addon"><span class="glyphicon glyphicon-th"></span></span>
                                @Html.ValidationMessageFor(model => model.BeginTime2)
                            </div>
                            @*@Html.TextBoxFor(model => model.BeginTime2, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.BeginTime2)*@
                        </div>
                    </td>
                    <td colspan="2">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.EndTime2)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            <div class="input-group date form_datetime" data-date="" data-date-format="hh:ii:00">
                                @Html.TextBoxFor(model => model.EndTime2, new { @class = "form-control", size = "16", @readonly = "" })
                                @*<input class="form-control" size="16" type="text" value="" readonly>*@
                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span>
                                <span class="input-group-addon"><span class="glyphicon glyphicon-th"></span></span>
                                @Html.ValidationMessageFor(model => model.EndTime2)
                            </div>
                            
                        </div>
                    </td>
                    <td colspan="2">
                        <button type="submit" class="btn btn-info" name="btnAction" id="btnAction2" value="btn2">第二轮时间确认</button>
                    </td>
                </tr>

                <tr>
                    <td colspan="2">
                        
                            @Html.LabelFor(model => model.BeginTime3)
                        
                    </td>
                    <td>
                        <div class="input-group date form_datetime" data-date="" data-date-format="hh:ii:00">
                            @Html.TextBoxFor(model => model.BeginTime3, new { @class = "form-control", size = "16", @readonly = "" })
                            @*<input class="form-control" size="16" type="text" value="" readonly>*@
                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span>
                            <span class="input-group-addon"><span class="glyphicon glyphicon-th"></span></span>
                           
                        </div>
                           
                        
                    </td>
                    <td colspan="2">
                        
                            @Html.LabelFor(model => model.EndTime3)
                        
                    </td>
                    <td valign="middle">
                        <div class="input-group date form_datetime" data-date="" data-date-format="hh:ii:00">
                            @Html.TextBoxFor(model => model.EndTime3, new { @class = "form-control", size = "16", @readonly = "" })
                            @*<input class="form-control" size="16" type="text" value="" readonly>*@
                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span>
                            <span class="input-group-addon"><span class="glyphicon glyphicon-th"></span></span>

                        </div>
                            
                        
                    </td>
                    <td colspan="2">
                        <button type="submit" class="btn btn-info" name="btnAction" id="btnAction3">第三轮时间确认</button>
                    </td>
                </tr>
                <tr>
                    <td colspan="8" style="background-color:#808080">
                        <strong>竞标明细</strong>
                    </td>
                </tr>
                <tr>
                   <td colspan="8">
                       <div id="Tender1detail">
                           
                       </div>
                   </td> 
                </tr>
            </table>
            
            @Html.HiddenFor(model=>model.Tid)
           
            @*<div class="editor-label">
                @Html.LabelFor(model => model.Tid, "tenderGonggao")
            </div>
            <div class="editor-field">
                @Html.DropDownList("Tid", String.Empty)
                @Html.ValidationMessageFor(model => model.Tid)
            </div>

            <p>
                <input type="submit" value="Create" />
            </p>*@
        </fieldset>
    }
    

</div>
<script type="text/javascript">
    $.getScript("/Scripts/jquery.validate.unobtrusive.js");
    
    function start() {
        var inc = document.getElementById('incomming');
        var wsImpl = window.WebSocket || window.MozWebSocket;
        

        inc.innerHTML += "connecting to server ..<br/>";

        // create a new websocket and connect
        if (window.ws && window.ws != "undefined")
        {

        } else {
            window.ws = new wsImpl(svIpc);
        }
        
        
        // when data is comming from the server, this metod is called
        ws.onmessage = function (evt) {
            inc.innerHTML += evt.data + '<br/>';
            if (evt.data.indexOf('adreload') >= 0)
            {
                $("#Tender1detail").load("/Tender_ModelCustomer1/index/?id=@Model.Tid");
                Mana2Time();
            }
        };

        // when the connection is established, this method is called
        ws.onopen = function () {
            inc.innerHTML += '.. connection open<br/>';
            window.ws.send("UserType:Admin");
        };

        // when the connection is closed, this method is called
        ws.onclose = function () {
            inc.innerHTML += '.. connection closed<br/>';
            ws = "undefined";
        }

        //form.addEventListener('submit', function (e) {
        //    e.preventDefault();
        //    var val = input.value;
        //    if (val.trim() == "")
        //        return;
        //    ws.send(val);
        //    input.value = "";
        //});

    }

    
    //window.onload = start;
    $(function () {
        //$(".alert").dialog({
        //    autoOpen: false,
        //    //width: 500,
        //    //height: 400,
        //    modal: true,
        //    show: {
        //        effect: "drop",
        //        duration: 700
        //    },
        //    hide: {
        //        effect: "drop",
        //        duration: 700
        //    }

        //})
        $('.form_datetime').datetimepicker({
            language: 'zh-CN',
            weekStart: 1,
            todayBtn: 1,
            autoclose: 1,
            todayHighlight: 1,
            startView: 1,
            minuteStep:1,
            minView: 0,
            maxView: 1,
            forceParse: 0
        });
        
        $("#Tender1detail").load("/Tender_ModelCustomer1/index/?id=@Model.Tid");

        //$("#BeginTime1").timepicker({ 'timeFormat': 'H:i:s', 'step': '1' ,'disableTextInput':'true'});
        ////$("#EndTime1").timepicker({ 'timeFormat': 'H:i:s', 'step': '5' });
        //$("#BeginTime2").timepicker({ 'timeFormat': 'H:i:s', 'step': '5' });
        //$("#EndTime2").timepicker({ 'timeFormat': 'H:i:s', 'step': '5' });
        //$("#BeginTime3").timepicker({ 'timeFormat': 'H:i:s', 'step': '5' });
        //$("#EndTime3").timepicker({ 'timeFormat': 'H:i:s', 'step': '5' });

        start();
        Mana2Time();
        //$("#btnAction2").attr("disabled", "disabled");
        //$("#btnAction3").attr("disabled", "disabled");
    })
    function tender_M1Secess() {
        window.ws.send("reload");
        Mana2Time();
        //$("#tender_m1div").show("drop", null, 500, callback)
        if ($("#btnAction1").attr("disabled")) {
            if ($("#btnAction2").attr("disabled")) {

                if ($("#btnAction3").attr("disabled")) {

                } else {
                    $("#btnAction3").attr("disabled", "disabled");
                }

            } else {
                $("#btnAction2").attr("disabled", "disabled");
                
                $("#btnAction3").removeAttr("disabled");
            }

        } else {
            $("#btnAction1").attr("disabled", "disabled");
            $("#BeginTime1").attr("disabled", "disabled");
            $("#EndTime1").attr("disabled", "disabled");

            $("#btnAction2").removeAttr("disabled");
        }
       
    }

    function Mana2Time() {

        $.ajax({
            url: "Tender_ModelManage1/LoadData/@Model.Tid",
            success: function (result) {


                $("#EndTime2").val(result.EndTime);


                if (window.ttt) {
                    if (window.ttt == "undefined") {
                        if ($("#EndTime2").val().indexOf(":") < 0) {
                            //clearInterval(ttt);
                            //window.ttt = "undefined"
                        } else {
                            window.ttt = setInterval("timeBack2()", "1000");
                        }
                    } else {
                        if ($("#EndTime2").val().indexOf(":") < 0) {
                            clearInterval(ttt);
                            window.ttt = "undefined"
                        } else {
                            //window.ttt = setInterval("timeBack()", "1000");
                        }
                    }
                } else {
                    if ($("#EndTime2").val().indexOf(":") < 0) {
                        //clearInterval(ttt);
                        //window.ttt = "undefined"
                    } else {
                        window.ttt = setInterval("timeBack2()", "1000");
                    }
                }
            }
        })
    }

    //function callback() {
    //    setTimeout(function () {
    //        $("#tender_m1div").removeAttr("style").fadeOut();
    //    }, 1000);
    //};
    function disableBtn() {
        ////$("#btnSub2").attr("disabled", "true");
        ////$("#btnSub2").attr("disabled", "disabled");
        //$("#btnSub2").attr({ "disabled": "disabled" })
        ////$(obj).attr("disabled", "disabled");
    }
   
</script>
   
    <pre id="incomming"></pre>
@*<script type="text/javascript" src="/Content/bootstrap/bootstrap-datetimepicker.js" charset="UTF-8"></script>
<script type="text/javascript" src="/Content/bootstrap/bootstrap-datetimepicker.zh-CN.js" charset="UTF-8"></script>*@

